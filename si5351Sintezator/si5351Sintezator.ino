/*
  Вся эта программа изначально написана NT7S и SQ9NJE.
  Оригинальный код, немного подправленный мною, под мои нужды.
  Ознакомится с оригиналом можно здесь
  http://nt7s.com/
  http://sq9nje.pl/
  http://ak2b.blogspot.com/
*/

#include <GyverEncoder.h>
#include <si5351.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

#define LOGO_WIDTH    128
#define LOGO_HEIGHT   64

#define F_MIN 100000L  // Нижний предел частоты
#define F_MAX 14350000L // Верхний предел частоты
#define OLED_RESET 4
#define ENCODER_A 3 // Encoder pin A
#define ENCODER_B 2 // Encoder pin B
#define ENCODER_BTN 11
#define FPU 12 //  для кнопки УВЧ = A2
#define ATT 13 //  для кнопки АТТ = A1

Adafruit_SSD1306 oled(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
// переменные нужные для кнопок PRE/ATT
int regim = 1; // для кнопки
int flag = 0;  // для кнопки

Si5351 si5351; //Подключаем OLED Дисплей 128х64
Encoder r(ENCODER_A, ENCODER_B, ENCODER_BTN,TYPE1); 

// Для кварцевых резонаторов со значением 8867 МГц.
volatile uint32_t LSB = 50000000ULL; //частота ОГ(гетеродина) для "нижней" боковой. Настр. на ниж. скат КФ.
volatile uint32_t USB = 50300000ULL; //частота ОГ(гетеродина) для "верхней" боковой. Настр. на вверхн. скат КФ.
volatile uint32_t bfo = 50000000ULL; //стартовать с "верхней" ...
//Эти USB/LSB частоты добавляется или вычитается из частоты VFO в "void loop()"
//В этом примере если начальная частота будет 14.20000 плюс 9.001500 то на выходе clk0 = 23.2015Mhz
volatile uint32_t vfo = 710000000ULL / SI5351_FREQ_MULT; //стартовая частота при запуске синтезатора.
volatile uint32_t radix = 100000;                        // Шаг перестройки по умолчанию при старте = 100 кГц
boolean changed_f = 0;
boolean changed_r = 0;
String tbfo = "";

static const unsigned char PROGMEM logo_bmp[] =
{ B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,B10111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11010001,B01010101,B01111111,B11111111,B11111111,B11111111,B11111011,B11011111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111110,B11101100,B01011011,B01111111,B11111111,B11111111,B11111111,B10101000,B10101111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B00010001,B00100000,B10001111,B11111111,B11111111,B11111111,B11101010,B00010111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111110,B10000000,B00000000,B01010111,B11111111,B11111111,B11111111,B10110000,B00000101,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11011010,B10000000,B00000000,B00010001,B01110111,B01111111,B11101010,B11000000,B00100101,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111000,B00000000,B00000000,B00001010,B10101010,B10010101,B01101101,B00100001,B00000101,B00010111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11101100,B00001111,B10000010,B00000100,B00010001,B01010110,B00010010,B10000011,B10000000,B10101011,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111000,B00111111,B11000011,B00000000,B01000100,B00000000,B10000000,B00000001,B10000000,B00000000,B01111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11101100,B00110000,B01000011,B00000000,B00000000,B00001000,B00000000,B00000001,B10000000,B00010010,B10111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11100000,B01100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,B10000000,B00000000,B10111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111100,B01100000,B00000000,B00000000,B00000000,B10000000,B00000000,B00000011,B10000000,B00000000,B01011111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11110000,B01110000,B00000011,B00001101,B11100011,B11100000,B11001111,B11000001,B10000011,B11110000,B00101111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11011000,B00110000,B00000011,B00001111,B11110011,B11110000,B11011111,B11100001,B10000011,B11111000,B00111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11101000,B00111100,B00000011,B00011110,B00111100,B00110000,B11110000,B01100001,B10001110,B00011100,B00001111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111100,B00011111,B00000111,B00001100,B00011000,B00111000,B11100000,B01100011,B10001100,B00001100,B00101111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11110010,B00000111,B11000011,B00001100,B00011000,B00011000,B11100000,B00110001,B10001100,B00001100,B00010111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111000,B00000001,B11100011,B00001100,B00011000,B00011000,B11100000,B01110001,B10001111,B11111110,B00001111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111100,B00000000,B11000011,B00001100,B00011000,B00011000,B11100000,B00110001,B10001101,B00101000,B00101111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11101000,B00000000,B01100011,B00011100,B00011100,B00011000,B11100000,B00110001,B10001100,B00000000,B00010111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11110010,B00000000,B11100111,B00001100,B00011000,B00111000,B11100000,B01100001,B10001100,B00000000,B00101111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11101000,B00000000,B11000011,B00001100,B00011000,B00011000,B11100000,B01100001,B10001110,B00000000,B00110111,B11111111,B11111111,B11111111,B11111111
,B11111111,B10110000,B01100001,B11000011,B00001100,B00011000,B00011000,B11111001,B11100001,B10000111,B01001000,B00011111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11101000,B01111111,B00000011,B00001100,B00011000,B00011000,B11101111,B10000011,B10000011,B11111100,B01011111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11110000,B00001100,B00000000,B00000000,B00000000,B00000000,B11100010,B00000000,B00000000,B01000000,B00101111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11011000,B00000000,B00000000,B00000000,B00000000,B00000000,B11100000,B00000000,B00000000,B00000000,B10111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11101100,B00000000,B00000000,B00000000,B00000000,B00000000,B11100000,B00000000,B00000000,B00000000,B11011111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111010,B00000000,B00100000,B10000000,B10001001,B01000000,B11100000,B00000000,B00000000,B00000010,B01111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111101,B10100010,B10011101,B00010110,B01110110,B10100000,B11100000,B10110101,B00111101,B01010101,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111110,B11011101,B11010110,B11001011,B10101011,B10010000,B00000000,B01010101,B11001101,B01010101,B01111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B01101110,B11111011,B01101101,B11111101,B11101000,B00000110,B11111110,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11100000,B00001001,B10110111,B11101110,B11101111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B10111111,B11111111,B10111111,B11111110,B01010011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11101111,B11111111,B11111111,B11111111,B11110101,B01011111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,B11010111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111
,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111 };
  

//------------------ Установка дополнительных функций здесь  ---------------------------
//Удалить коммент (//) для применения нужного варианта. Задействовать только одно.
//#define IF_Offset // Показание на ЖКИ плюс(минус) на значение ПЧ
#define Direct_conversion // чатота на выходе как на ЖКИ. Прямой выход. Генератор.
//#define FreqX4  // частота на выходе, умноженная на четыре ...
//#define FreqX2  // частота на выходе, умноженная на два ...
//---------------------------------------------------------------------------------------


/**************************************/
/* Change the frequency               */
/* dir = 1    Increment               */
/* dir = -1   Decrement               */
/**************************************/
void set_frequency(short dir)
{
  long _vfo;
  _vfo = vfo;
    _vfo += (dir * radix);
Serial.println(_vfo);
  if (_vfo > F_MAX)
    _vfo = F_MAX;
  if (_vfo < F_MIN )
    _vfo = F_MIN;
    vfo = _vfo;
  changed_f = 1;
}

/**************************************/
/* Displays the frequency             */
/**************************************/
void display_frequency()
{
  uint16_t f;
oled.fillRect(0,0,128,24,BLACK);
  oled.setCursor(0, 0);
  oled.setTextSize(1);
  oled.print("freq (herz):");
  oled.println(tbfo);
  oled.setTextSize(2);
  oled.print("                   ");
  oled.setCursor(0, 8);
  f = vfo / 1000000; //variable is now vfo instead of 'frequency'
  if (f < 10)
    oled.print(' ');
  oled.print(f);
  oled.print('.');
  f = (vfo % 1000000) / 1000;
  if (f < 100)
    oled.print('0');
  if (f < 10)
    oled.print('0');
  oled.print(f);
  oled.print('.');
  f = vfo % 1000;
  if (f < 100)
    oled.print('0');
  if (f < 10)
    oled.print('0');
  oled.print(f);
  //oled .print("Hz ");
  oled.display();
  //Serial.println(vfo + bfo);
  //Serial.println(tbfo);
}

void set_radix()
{
      //-----------------------------------
    // Button press changes the frequency change step for 1 Hz steps 
      switch (radix)
      {
      case 1:
        radix = 10;
        break;
      case 10:
        radix = 100;
        break;
      case 100:
        radix = 1000;
        break;
      case 1000:
        radix = 10000;
        break;
      case 10000:
        radix = 100000;
        break;
      case 100000:
        radix = 1000000;
        break;
      case 1000000:
        radix = 1;
        break;
      }
      changed_r = 1;
}

void display_logo()
{
   // ------------------------------------------------------------
  // отрисуем лого нашей программы
  //--------------------------------------------------------------
oled.clearDisplay();
   oled.drawBitmap(
    (oled.width()  - LOGO_WIDTH ) / 2,
    (oled.height() - LOGO_HEIGHT) / 2,
    logo_bmp, LOGO_WIDTH, LOGO_HEIGHT, 1);
  oled.display();
  delay(2000); // Pause for 2 seconds 
    //oled.clearDisplay();
  oled.setTextSize(2);              // big 2:1 pixel scale
  oled.setTextColor(BLACK);         // Draw white text
  oled.setCursor(0, 0);             // Start at top-left corner
  oled.println("SINTEZER"); // текст на экране - "  HELLO !!! "
  //oled.setCursor(0,10);             // Start at top-left corner
  oled.setTextSize(1);             // normal 1:1 pixel scale
  oled.setCursor(0, 48);             // Start at top-left corner
  oled.print("Si5351 by ihtiandr9"); // текст на экране - "  HELLO !!! "
  oled.display();
  oled.setTextColor(WHITE);         // Draw white text
  }
/**************************************/
/* Отображаем шаг изменения частоты */
/**************************************/
void display_radix()
{

  // oled.clearDisplay();
  oled.fillRect(0,24,128,24,BLACK);
  oled.setCursor(0, 24);
  //Serial.println("gluk");
  oled.setTextSize(1);
  oled.println("step: ");
  oled.setTextSize(2);

  //oled .print(step);

  switch (radix)
  {
  case 1:
    oled.print("    1");
    break;
  case 10:
    oled.print("   10");
    break;
  case 100:
    oled.print("  100");
    break;
  case 1000:
    oled.print("   1k");
    break;
  case 10000:
    oled.print("  10k");
    break;
  case 100000:
    //oled .setCursor(10, 1);
    oled.print(" 100k");
    break;
  case 1000000:
    //oled .setCursor(9, 1);
    oled.print("   1M"); //1MHz increments
    break;
  }
  oled.print("Hz");
  oled.display();
}

void setup()
{

  Serial.begin(9600);

  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if (!oled.begin(SSD1306_SWITCHCAPVCC, 0x3c))
  { // Address 0x3D for 128x64
    Serial.println(F("SSD1306 allocation failed"));
    for (;;)
      ; // Don't proceed, loop forever
  }

   // начальное сообщение
  display_logo();
  delay(5000); // Время на прочтение начального сообщения 3 сек
  oled.clearDisplay();

  //Wire.begin();
  si5351.set_correction(71000000); //**mine. There is a calibration sketch in File/Examples/si5351Arduino
  //where you can determine the correction by using the serial monitor.
  //ввести калибровочное знечение в строчке si5351.set_correction(хххххххх).
  //Нужно вычислить запустив "si5351calibration" в папке с примерами библиотеки si5351.

  //initialize the Si5351
  si5351.init(SI5351_CRYSTAL_LOAD_8PF, 0); //If you're using a 27Mhz crystal, put in 25000000 instead of 0
  // 0 is the default crystal frequency of 25Mhz.

  si5351.set_pll(SI5351_PLL_FIXED, SI5351_PLLA);
  // Set CLK0 to output the starting "vfo" frequency as set above by vfo = ?

#ifdef IF_Offset
  si5351.set_freq((vfo * SI5351_FREQ_MULT) + bfo, SI5351_PLL_FIXED, SI5351_CLK0);
  volatile uint32_t vfoT = (vfo * SI5351_FREQ_MULT) + bfo;
  tbfo = "USB";
  // Set CLK2 to output bfo frequency
  si5351.set_freq(bfo, 0, SI5351_CLK2);
  //si5351.drive_strength(SI5351_CLK0,SI5351_DRIVE_2MA); //you can set this to 2MA, 4MA, 6MA or 8MA
  //si5351.drive_strength(SI5351_CLK1,SI5351_DRIVE_2MA); //be careful though - measure into 50ohms
  //si5351.drive_strength(SI5351_CLK2,SI5351_DRIVE_2MA); //
#endif
  /**/
#ifdef Direct_conversion
  si5351.set_freq((vfo * SI5351_FREQ_MULT), SI5351_PLL_FIXED, SI5351_CLK0);
#endif

#ifdef FreqX4
  si5351.set_freq((vfo * SI5351_FREQ_MULT) * 4, SI5351_PLL_FIXED, SI5351_CLK0);
#endif

#ifdef FreqX2
  si5351.set_freq((vfo * SI5351_FREQ_MULT) * 2, SI5351_PLL_FIXED, SI5351_CLK0);
#endif

  pinMode(ENCODER_BTN, INPUT_PULLUP);
  PCICR |= (1 << PCIE2); // Enable pin change interrupt for the encoder
  PCMSK2 |= (1 << PCINT18) | (1 << PCINT19);
  sei();
  // Serial.println("init freq done");
  display_frequency(); // Update the display
  display_radix();

  // Порты, пины для управл. напр. УВЧ и АТТ
  pinMode(FPU, OUTPUT);
  pinMode(ATT, OUTPUT);

  Serial.println(F("Setup ... done"));
}

void loop()
{
  r.tick();
  if (r.isRight()) 
  {
    set_frequency(-1);
    Serial.println("Right");         // если был поворот
  }
  if (r.isLeft()) {
    set_frequency(1);
    Serial.println("Left");
    }
   if (r.isClick())
   {
    set_radix();
    Serial.println("encoder clicked");
   }
  // Update the display if the frequency has been changed
  if (changed_f)
  {
    display_frequency();

#ifdef IF_Offset
    si5351.set_freq((vfo * SI5351_FREQ_MULT) + bfo, SI5351_PLL_FIXED, SI5351_CLK0);
    // Вы также можете вычесть BFO, чтобы удовлетворить ваши потребности
    //si5351.set_freq((vfo * SI5351_FREQ_MULT) - bfo  , SI5351_PLL_FIXED, SI5351_CLK0);

    if (vfo >= 10000000ULL & tbfo != "USB")
    {
      bfo = USB;
      tbfo = "USB";
      si5351.set_freq(bfo, 0, SI5351_CLK2);
      Serial.println("We've switched from LSB to USB");
    }
    else if (vfo < 10000000ULL & tbfo != "LSB")
    {
      bfo = LSB;
      tbfo = "LSB";
      si5351.set_freq(bfo, 0, SI5351_CLK2);
      Serial.println("We've switched from USB to LSB");
    }

#endif

#ifdef Direct_conversion
    si5351.set_freq((vfo * SI5351_FREQ_MULT), SI5351_PLL_FIXED, SI5351_CLK0);
    tbfo = "";
#endif

#ifdef FreqX4
    si5351.set_freq((vfo * SI5351_FREQ_MULT) * 4, SI5351_PLL_FIXED, SI5351_CLK0);
    tbfo = "";
#endif

#ifdef FreqX2
    si5351.set_freq((vfo * SI5351_FREQ_MULT) * 2, SI5351_PLL_FIXED, SI5351_CLK0);
    tbfo = "";
#endif

    changed_f = 0;
  }

if(changed_r){
  display_radix();
  changed_r = 0;
}
  // Кнопки УВЧ и АТТ ---------not--implemented----------------------

    // HAM BAND ----- Границы диапазонов ---------
    oled.fillRect(0, 48, 128, 16, BLACK); 
    oled.setCursor(0, 48);
    // 160-метровый (1,81 - 2 МГц)
    if (vfo >= 1810000ULL && vfo <= 2000000ULL)
    {     
      oled.print("160m");
    }

    else
        // 80-метровый (3,5 - 3,8 МГц)
        if (vfo >= 3500000ULL && vfo <= 3800000ULL)
    {
      oled.print("80m ");
    }
    else
        // 40-метровый (7 - 7,2 МГц)
        if (vfo >= 7000000ULL && vfo <= 7200000ULL)
    {
      oled.print("40m ");
    }
    else
        // 30-метровый (только телеграф 10,1 - 10,15 МГц)
        if (vfo >= 10100000ULL && vfo <= 10150000ULL)
    {
      oled.print("30m ");
    }
    else
        // 20-метровый (14 - 14,35 МГц)
        if (vfo >= 14000000ULL && vfo <= 14350000ULL)
    {
      oled.print("20m ");
    }
    else
        // 17-метровый (18,068 - 18,168 МГц)
        if (vfo >= 18068000ULL && vfo <= 18168000ULL)
    {
      oled.print("17m ");
    }
    else
        // 15-метровый (21 - 21,45 МГц)
        if (vfo >= 21000000ULL && vfo <= 21450000ULL)
    {
      oled.print("15m ");
    }
    else
        // 12-метровый (24,89 - 25,14 МГц)
        if (vfo >= 24890000ULL && vfo <= 25140000ULL)
    {
      oled.print("12m ");
    }
    else
        // 10-метровый (28 - 29,7 МГц)
        if (vfo >= 28000000ULL && vfo <= 29700000ULL)
    {
      oled.print("10m ");
    }
    else
    // Если за границей любительских - очистка экрана
    {
      //ничего не пишем
    }
  
}
/**************************************/
/* Interrupt service routine for      */
/* encoder frequency change           */
/**************************************/
ISR(PCINT2_vect)
{
  r.tick();
  return;
//
}
